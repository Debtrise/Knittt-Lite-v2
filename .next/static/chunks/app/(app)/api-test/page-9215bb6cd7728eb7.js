(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3543],{5941:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>d});var n=a(95155),o=a(12115),s=a(19393),l=a(52107),r=a(1169),c=a(66798);function d(){let[e,t]=(0,o.useState)(!1),[a,d]=(0,o.useState)(null),[i,p]=(0,o.useState)(null),u=async()=>{t(!0),d(null);try{let e=await (0,c.ac)();console.log("Projects:",e);let t=await (0,c.gA)({name:"Test Project",description:"A test project created via API"});console.log("New project:",t);let a=await (0,c.g5)();console.log("Node types:",a);let n=await (0,c.cV)();console.log("Capabilities:",n),p({projects:e,newProject:t,nodeTypes:a,capabilities:n})}catch(e){console.error("API test failed:",e),d(e instanceof Error?e.message:"An unknown error occurred")}finally{t(!1)}};return(0,n.jsx)(r.A,{children:(0,n.jsx)("div",{className:"container mx-auto p-4",children:(0,n.jsxs)(l.Zp,{children:[(0,n.jsxs)(l.aR,{children:[(0,n.jsx)(l.ZB,{children:"API Test"}),(0,n.jsx)(l.BT,{children:"Test the Dialplan API endpoints"})]}),(0,n.jsxs)(l.Wu,{children:[(0,n.jsx)(s.$,{onClick:u,disabled:e,children:e?"Testing...":"Run API Test"}),a&&(0,n.jsx)("div",{className:"mt-4 p-4 bg-red-100 text-red-700 rounded",children:a}),i&&(0,n.jsxs)("div",{className:"mt-4",children:[(0,n.jsx)("h3",{className:"text-lg font-semibold",children:"Test Results:"}),(0,n.jsx)("pre",{className:"mt-2 p-4 bg-gray-100 rounded overflow-auto",children:JSON.stringify(i,null,2)})]})]})]})})})}},16119:(e,t,a)=>{Promise.resolve().then(a.bind(a,5941))},52107:(e,t,a)=>{"use strict";a.d(t,{BT:()=>d,Wu:()=>i,ZB:()=>c,Zp:()=>l,aR:()=>r,wL:()=>p});var n=a(95155),o=a(12115),s=a(67910);let l=o.forwardRef((e,t)=>{let{className:a,...o}=e;return(0,n.jsx)("div",{ref:t,className:(0,s.cn)("rounded-lg border bg-card text-card-foreground shadow-sm",a),...o})});l.displayName="Card";let r=o.forwardRef((e,t)=>{let{className:a,...o}=e;return(0,n.jsx)("div",{ref:t,className:(0,s.cn)("flex flex-col space-y-1.5 p-6",a),...o})});r.displayName="CardHeader";let c=o.forwardRef((e,t)=>{let{className:a,...o}=e;return(0,n.jsx)("h3",{ref:t,className:(0,s.cn)("text-lg font-semibold leading-none tracking-tight",a),...o})});c.displayName="CardTitle";let d=o.forwardRef((e,t)=>{let{className:a,...o}=e;return(0,n.jsx)("p",{ref:t,className:(0,s.cn)("text-sm text-muted-foreground",a),...o})});d.displayName="CardDescription";let i=o.forwardRef((e,t)=>{let{className:a,...o}=e;return(0,n.jsx)("div",{ref:t,className:(0,s.cn)("p-6 pt-0",a),...o})});i.displayName="CardContent";let p=o.forwardRef((e,t)=>{let{className:a,...o}=e;return(0,n.jsx)("div",{ref:t,className:(0,s.cn)("flex items-center p-6 pt-0",a),...o})});p.displayName="CardFooter"},66798:(e,t,a)=>{"use strict";a.d(t,{AC:()=>w,BL:()=>c,ES:()=>s,OK:()=>y,RM:()=>u,U$:()=>v,YE:()=>g,aN:()=>h,ac:()=>o,cV:()=>N,g5:()=>f,gA:()=>l,ht:()=>d,mJ:()=>p,q6:()=>i,tq:()=>m,v:()=>x,xx:()=>r});var n=a(85725);let o=async()=>(await n.Ay.get("/dialplan/projects")).data,s=async e=>(await n.Ay.get("/dialplan/projects/".concat(e))).data,l=async e=>(await n.Ay.post("/dialplan/projects",e)).data,r=async e=>(await n.Ay.delete("/dialplan/projects/".concat(e))).data,c=async(e,t)=>(await n.Ay.post("/dialplan/projects/".concat(e,"/clone"),{newName:t})).data,d=async e=>(await n.Ay.get("/dialplan/projects/".concat(e,"/contexts"))).data,i=async(e,t)=>(await n.Ay.post("/dialplan/projects/".concat(e,"/contexts"),t)).data,p=async e=>(await n.Ay.get("/dialplan/contexts/".concat(e,"/nodes"))).data,u=async(e,t)=>{try{console.log("Creating node with data:",{contextId:e,data:t});let a=await n.Ay.post("/dialplan/contexts/".concat(e,"/nodes"),t);return console.log("Node creation successful:",a.data),a.data}catch(e){var a;throw console.error("Node creation failed:",(null===(a=e.response)||void 0===a?void 0:a.data)||e.message||e),e}},y=async(e,t)=>(await n.Ay.put("/dialplan/nodes/".concat(e),t)).data,w=async e=>{var t,a;try{if(console.log("Deleting node with ID:",e),!e||isNaN(e))throw Error("Invalid node ID");try{let t=await n.Ay.delete("/dialplan/nodes/".concat(e));return console.log("Node deletion successful:",t.data),t.data}catch(a){if((null===(t=a.response)||void 0===t?void 0:t.status)===404){console.warn("Standard delete endpoint not found, trying alternate endpoint...");let t=await n.Ay.post("/dialplan/nodes/delete",{id:e});return console.log("Node deletion successful with fallback:",t.data),t.data}throw a}}catch(n){n.response?console.error("Node deletion failed with response:",{status:n.response.status,data:n.response.data,headers:n.response.headers}):n.request?console.error("Node deletion failed - no response received:",n.request):console.error("Node deletion failed - error setting up request:",n.message);let e="Failed to delete node";(null===(a=n.response)||void 0===a?void 0:a.status)===404?e="The node delete endpoint was not found on the server. The API may not be fully implemented.":n.message&&(e=n.message);let t=Error(e);throw t.cause=n,t}},f=async()=>(await n.Ay.get("/dialplan/node-types")).data,g=async e=>(await n.Ay.get("/dialplan/contexts/".concat(e,"/connections"))).data,m=async e=>{try{console.log("Creating connection with data:",e);let t=await n.Ay.post("/dialplan/connections",e);return console.log("Connection creation successful:",t.data),t.data}catch(e){var t;throw console.error("Connection creation failed:",(null===(t=e.response)||void 0===t?void 0:t.data)||e.message||e),e}},h=async e=>{var t,a;try{if(console.log("Deleting connection with ID:",e),!e||isNaN(e))throw Error("Invalid connection ID");try{let t=await n.Ay.delete("/dialplan/connections/".concat(e));return console.log("Connection deletion successful:",t.data),t.data}catch(a){if((null===(t=a.response)||void 0===t?void 0:t.status)===404){console.warn("Standard connection delete endpoint not found, trying alternate endpoint...");let t=await n.Ay.post("/dialplan/connections/delete",{id:e});return console.log("Connection deletion successful with fallback:",t.data),t.data}throw a}}catch(n){n.response?console.error("Connection deletion failed with response:",{status:n.response.status,data:n.response.data}):n.request?console.error("Connection deletion failed - no response received:",n.request):console.error("Connection deletion failed - error setting up request:",n.message);let e="Failed to delete connection";(null===(a=n.response)||void 0===a?void 0:a.status)===404?e="The connection delete endpoint was not found on the server. The API may not be fully implemented.":n.message&&(e=n.message);let t=Error(e);throw t.cause=n,t}},v=async e=>{try{return(await n.Ay.post("/dialplan/projects/".concat(e,"/validate"))).data}catch(e){return console.warn("Validate project endpoint may not be implemented yet"),{valid:!0,errors:[],warnings:[],timestamp:new Date().toISOString()}}},x=async e=>{try{return(await n.Ay.post("/dialplan/projects/".concat(e,"/generate"))).data}catch(e){return console.warn("Generate dialplan endpoint may not be implemented yet"),{dialplan:"[default]\nexten => s,1,NoOp(Demo Dialplan)\nexten => s,n,Hangup()",project:"Demo Project",contexts:1,timestamp:new Date().toISOString()}}},N=async()=>(await n.Ay.get("/system/dialplan-capabilities")).data}},e=>{var t=t=>e(e.s=t);e.O(0,[9272,2376,6514,1169,1485,8441,6587,7358],()=>t(16119)),_N_E=e.O()}]);